
OILS - Logarithmic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000716  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  0000076a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000076a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000079c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000036b6  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000328c  00000000  00000000  00003ec2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005cd  00000000  00000000  0000714e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  0000771c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002514  00000000  00000000  0000778c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000202  00000000  00000000  00009ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00009ea2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2b 01 	jmp	0x256	; 0x256 <__ctors_end>
   4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
   8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
   c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  10:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  14:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  18:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  1c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  20:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  24:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  28:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  2c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  30:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  34:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  38:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  3c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  40:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  44:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  48:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  4c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  50:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  54:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  58:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  5c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  60:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  64:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  68:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  6c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  70:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  74:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  78:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  7c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  80:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  84:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  88:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  8c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  90:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  94:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  98:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  9c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  a0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  a4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  a8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  ac:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  b0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  b4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  b8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  bc:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  c0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  c4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  c8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  cc:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  d0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  d4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  d8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  dc:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  e0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  e4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  e8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  ec:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  f0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  f4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  f8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  fc:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 100:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 104:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 108:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 10c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 110:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 114:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 118:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 11c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 120:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 124:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 128:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 12c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 130:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 134:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 138:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 13c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 140:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 144:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 148:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 14c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 150:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 154:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 158:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 15c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 160:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 164:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 168:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 16c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 170:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 174:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 178:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 17c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 180:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 184:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 188:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 18c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 190:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 194:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 198:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 19c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1a0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1a4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1a8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1ac:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1b0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1b4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1b8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1bc:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1c0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1c4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1c8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1cc:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1d0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1d4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1d8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1dc:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1e0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1e4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1e8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1ec:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1f0:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1f4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1f8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
 1fc:	08 00       	.word	0x0008	; ????
 1fe:	00 00       	nop
 200:	be 92       	st	-X, r11
 202:	24 49       	sbci	r18, 0x94	; 148
 204:	12 3e       	cpi	r17, 0xE2	; 226
 206:	ab aa       	std	Y+51, r10	; 0x33
 208:	aa 2a       	or	r10, r26
 20a:	be cd       	rjmp	.-1156   	; 0xfffffd88 <__eeprom_end+0xff7efd88>
 20c:	cc cc       	rjmp	.-1640   	; 0xfffffba6 <__eeprom_end+0xff7efba6>
 20e:	4c 3e       	cpi	r20, 0xEC	; 236
 210:	00 00       	nop
 212:	00 80       	ld	r0, Z
 214:	be ab       	std	Y+54, r27	; 0x36
 216:	aa aa       	std	Y+50, r10	; 0x32
 218:	aa 3e       	cpi	r26, 0xEA	; 234
 21a:	00 00       	nop
 21c:	00 00       	nop
 21e:	bf 00       	.word	0x00bf	; ????
 220:	00 00       	nop
 222:	80 3f       	cpi	r24, 0xF0	; 240
 224:	00 00       	nop
 226:	00 00       	nop
 228:	00 08       	sbc	r0, r0
 22a:	41 78       	andi	r20, 0x81	; 129
 22c:	d3 bb       	out	0x13, r29	; 19
 22e:	43 87       	std	Z+11, r20	; 0x0b
 230:	d1 13       	cpse	r29, r17
 232:	3d 19       	sub	r19, r13
 234:	0e 3c       	cpi	r16, 0xCE	; 206
 236:	c3 bd       	out	0x23, r28	; 35
 238:	42 82       	std	Z+2, r4	; 0x02
 23a:	ad 2b       	or	r26, r29
 23c:	3e 68       	ori	r19, 0x8E	; 142
 23e:	ec 82       	std	Y+4, r14	; 0x04
 240:	76 be       	out	0x36, r7	; 54
 242:	d9 8f       	std	Y+25, r29	; 0x19
 244:	e1 a9       	ldd	r30, Z+49	; 0x31
 246:	3e 4c       	sbci	r19, 0xCE	; 206
 248:	80 ef       	ldi	r24, 0xF0	; 240
 24a:	ff be       	out	0x3f, r15	; 63
 24c:	01 c4       	rjmp	.+2050   	; 0xa50 <_etext+0x33a>
 24e:	ff 7f       	andi	r31, 0xFF	; 255
 250:	3f 00       	.word	0x003f	; ????
 252:	00 00       	nop
	...

00000256 <__ctors_end>:
 256:	11 24       	eor	r1, r1
 258:	1f be       	out	0x3f, r1	; 63
 25a:	cf ef       	ldi	r28, 0xFF	; 255
 25c:	cd bf       	out	0x3d, r28	; 61
 25e:	df e3       	ldi	r29, 0x3F	; 63
 260:	de bf       	out	0x3e, r29	; 62
 262:	00 e0       	ldi	r16, 0x00	; 0
 264:	0c bf       	out	0x3c, r16	; 60
 266:	0e 94 49 01 	call	0x292	; 0x292 <main>
 26a:	0c 94 89 03 	jmp	0x712	; 0x712 <_exit>

0000026e <__bad_interrupt>:
 26e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000272 <_Z8transmith>:

void transmit(uint8_t dat)
{
	// This is the transmit function using the USART functionality of ATXmega128A3U.
	// Here, we transmit the data 'dat', which has to be 8 bits of data, or 1 byte.
	while(!(USARTC0_STATUS & (USART_DREIF_bm)));		// Until data register empty interrupt flag is set, wait. (So that wrong data is not sent.)
 272:	e1 ea       	ldi	r30, 0xA1	; 161
 274:	f8 e0       	ldi	r31, 0x08	; 8
 276:	90 81       	ld	r25, Z
 278:	95 ff       	sbrs	r25, 5
 27a:	fd cf       	rjmp	.-6      	; 0x276 <_Z8transmith+0x4>
	USARTC0_DATA = dat;									// Load the data into the transmit buffer register. (Sends the data)
 27c:	80 93 a0 08 	sts	0x08A0, r24	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7008a0>
 280:	08 95       	ret

00000282 <_Z7receivev>:

uint8_t receive(void)
{
	// This is the receive function using the USART functionality of ATXmega128A3U.
	// Here, we receive data in packets of 8 bits, or a byte.
	while(!(USARTC0_STATUS & (USART_RXCIF_bm)));		// Until receive complete interrupt flag is set, wait
 282:	e1 ea       	ldi	r30, 0xA1	; 161
 284:	f8 e0       	ldi	r31, 0x08	; 8
 286:	80 81       	ld	r24, Z
 288:	88 23       	and	r24, r24
 28a:	ec f7       	brge	.-6      	; 0x286 <_Z7receivev+0x4>
	return USARTC0_DATA;								// Access the receive buffer register and return the contents of the buffer register.
 28c:	80 91 a0 08 	lds	r24, 0x08A0	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7008a0>
}
 290:	08 95       	ret

00000292 <main>:

int main(void)
{
 292:	df 92       	push	r13
 294:	ef 92       	push	r14
 296:	ff 92       	push	r15
 298:	0f 93       	push	r16
 29a:	1f 93       	push	r17
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	1f 92       	push	r1
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
	// This is the main function of the program.
	PORTC_DIRSET = PIN3_bm;								// Setting TX pin as output (C3)
 2a6:	88 e0       	ldi	r24, 0x08	; 8
 2a8:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x700641>
	PORTC_DIRCLR = PIN2_bm;								// Setting RX pin as input (C2)
 2ac:	84 e0       	ldi	r24, 0x04	; 4
 2ae:	80 93 42 06 	sts	0x0642, r24	; 0x800642 <__TEXT_REGION_LENGTH__+0x700642>
	USARTC0_BAUDCTRLA = 12;								// Setting the BSEL number in the baud rate register for rate of 9600
 2b2:	8c e0       	ldi	r24, 0x0C	; 12
 2b4:	80 93 a6 08 	sts	0x08A6, r24	; 0x8008a6 <__TEXT_REGION_LENGTH__+0x7008a6>
	USARTC0_BAUDCTRLB = 0;								// Setting the BSCALE = 0
 2b8:	10 92 a7 08 	sts	0x08A7, r1	; 0x8008a7 <__TEXT_REGION_LENGTH__+0x7008a7>
	USARTC0_CTRLB = (USART_RXEN_bm)|(USART_TXEN_bm);	// Enable transmitter and receiver ports.
 2bc:	88 e1       	ldi	r24, 0x18	; 24
 2be:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7008a4>
	USARTC0_CTRLC = (USART_CHSIZE_8BIT_gc)|(USART_PMODE_DISABLED_gc);  // 8 bits with 1 stop bit.
 2c2:	83 e0       	ldi	r24, 0x03	; 3
 2c4:	80 93 a5 08 	sts	0x08A5, r24	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7008a5>
 2c8:	0d e0       	ldi	r16, 0x0D	; 13
 2ca:	10 e0       	ldi	r17, 0x00	; 0

	for(int i = 0; i < 13; i++){
	// The actual data is to be received from Python via a start flag (From Python) followed by 4 bytes of data, which will be stored in the variables a, b, c, d.
	// That code will look something like this:
	while(1){
		uint8_t head1 = receive();
 2cc:	0e 94 41 01 	call	0x282	; 0x282 <_Z7receivev>
		if (head1 == 'a'){
 2d0:	81 36       	cpi	r24, 0x61	; 97
 2d2:	e1 f7       	brne	.-8      	; 0x2cc <main+0x3a>
			//transmit('b');
			break;
		}
	}
	
	uint8_t a = receive();					// These are the received data from the Python Console, stored in a, b, c and d.
 2d4:	0e 94 41 01 	call	0x282	; 0x282 <_Z7receivev>
 2d8:	d8 2e       	mov	r13, r24
	uint8_t b = receive();
 2da:	0e 94 41 01 	call	0x282	; 0x282 <_Z7receivev>
 2de:	e8 2e       	mov	r14, r24
	uint8_t c = receive();
 2e0:	0e 94 41 01 	call	0x282	; 0x282 <_Z7receivev>
 2e4:	f8 2e       	mov	r15, r24
	uint8_t d = receive();
 2e6:	0e 94 41 01 	call	0x282	; 0x282 <_Z7receivev>
	//uint16_t address = (uint16_t)(TEST_PAGE_ADDR_1*EEPROM_PAGESIZE)|(TEST_BYTE_ADDR_a & (EEPROM_PAGESIZE-1));
	
	uint8_t foo = 0;
	uint8_t * address = &foo + 1;
	
	*(uint8_t*)(address+0) = a; // write a
 2ea:	da 82       	std	Y+2, r13	; 0x02
	*(uint8_t*)(address+1) = b; // write b
 2ec:	eb 82       	std	Y+3, r14	; 0x03
	*(uint8_t*)(address+2) = c; // write c
 2ee:	fc 82       	std	Y+4, r15	; 0x04
	*(uint8_t*)(address+3) = d; // write d
 2f0:	8d 83       	std	Y+5, r24	; 0x05
	
	float float_input = *(float*)(address); // read float_input
	
	// Function Implemented here
	float float_output = log(float_input);
 2f2:	6a 81       	ldd	r22, Y+2	; 0x02
 2f4:	7b 81       	ldd	r23, Y+3	; 0x03
 2f6:	8c 81       	ldd	r24, Y+4	; 0x04
 2f8:	9d 81       	ldd	r25, Y+5	; 0x05
 2fa:	0e 94 a8 01 	call	0x350	; 0x350 <log>
	*(float*)(address+4) = float_output; // Write float_output
 2fe:	6e 83       	std	Y+6, r22	; 0x06
 300:	7f 83       	std	Y+7, r23	; 0x07
 302:	88 87       	std	Y+8, r24	; 0x08
 304:	99 87       	std	Y+9, r25	; 0x09
	
	
	uint8_t e = *(uint8_t*)(address+4); // read e
	uint8_t f = *(uint8_t*)(address+5); // read f
 306:	df 80       	ldd	r13, Y+7	; 0x07
	uint8_t g = *(uint8_t*)(address+6); // read h
 308:	e8 84       	ldd	r14, Y+8	; 0x08
	uint8_t h = *(uint8_t*)(address+7); // read e
 30a:	f9 84       	ldd	r15, Y+9	; 0x09
	
	transmit(e);
 30c:	8e 81       	ldd	r24, Y+6	; 0x06
 30e:	0e 94 39 01 	call	0x272	; 0x272 <_Z8transmith>
	transmit(f);
 312:	8d 2d       	mov	r24, r13
 314:	0e 94 39 01 	call	0x272	; 0x272 <_Z8transmith>
	transmit(g);
 318:	8e 2d       	mov	r24, r14
 31a:	0e 94 39 01 	call	0x272	; 0x272 <_Z8transmith>
	transmit(h);
 31e:	8f 2d       	mov	r24, r15
 320:	0e 94 39 01 	call	0x272	; 0x272 <_Z8transmith>
 324:	01 50       	subi	r16, 0x01	; 1
 326:	11 09       	sbc	r17, r1
	USARTC0_BAUDCTRLB = 0;								// Setting the BSCALE = 0
	USARTC0_CTRLB = (USART_RXEN_bm)|(USART_TXEN_bm);	// Enable transmitter and receiver ports.
	USARTC0_CTRLC = (USART_CHSIZE_8BIT_gc)|(USART_PMODE_DISABLED_gc);  // 8 bits with 1 stop bit.


	for(int i = 0; i < 13; i++){
 328:	89 f6       	brne	.-94     	; 0x2cc <main+0x3a>
	transmit(e);
	transmit(f);
	transmit(g);
	transmit(h);
	}
}
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	0f 90       	pop	r0
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	1f 91       	pop	r17
 336:	0f 91       	pop	r16
 338:	ff 90       	pop	r15
 33a:	ef 90       	pop	r14
 33c:	df 90       	pop	r13
 33e:	08 95       	ret
 340:	16 f0       	brts	.+4      	; 0x346 <main+0xb4>
 342:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_mpack>
 346:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_nan>
 34a:	68 94       	set
 34c:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>

00000350 <log>:
 350:	0e 94 68 03 	call	0x6d0	; 0x6d0 <__fp_splitA>
 354:	a8 f3       	brcs	.-22     	; 0x340 <main+0xae>
 356:	99 23       	and	r25, r25
 358:	c1 f3       	breq	.-16     	; 0x34a <main+0xb8>
 35a:	ae f3       	brts	.-22     	; 0x346 <main+0xb4>
 35c:	df 93       	push	r29
 35e:	cf 93       	push	r28
 360:	1f 93       	push	r17
 362:	0f 93       	push	r16
 364:	ff 92       	push	r15
 366:	c9 2f       	mov	r28, r25
 368:	dd 27       	eor	r29, r29
 36a:	88 23       	and	r24, r24
 36c:	2a f0       	brmi	.+10     	; 0x378 <log+0x28>
 36e:	21 97       	sbiw	r28, 0x01	; 1
 370:	66 0f       	add	r22, r22
 372:	77 1f       	adc	r23, r23
 374:	88 1f       	adc	r24, r24
 376:	da f7       	brpl	.-10     	; 0x36e <log+0x1e>
 378:	20 e0       	ldi	r18, 0x00	; 0
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	40 e8       	ldi	r20, 0x80	; 128
 37e:	5f eb       	ldi	r21, 0xBF	; 191
 380:	9f e3       	ldi	r25, 0x3F	; 63
 382:	88 39       	cpi	r24, 0x98	; 152
 384:	20 f0       	brcs	.+8      	; 0x38e <log+0x3e>
 386:	80 3e       	cpi	r24, 0xE0	; 224
 388:	38 f0       	brcs	.+14     	; 0x398 <log+0x48>
 38a:	21 96       	adiw	r28, 0x01	; 1
 38c:	8f 77       	andi	r24, 0x7F	; 127
 38e:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__addsf3>
 392:	ec ef       	ldi	r30, 0xFC	; 252
 394:	f1 e0       	ldi	r31, 0x01	; 1
 396:	04 c0       	rjmp	.+8      	; 0x3a0 <log+0x50>
 398:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__addsf3>
 39c:	e9 e2       	ldi	r30, 0x29	; 41
 39e:	f2 e0       	ldi	r31, 0x02	; 2
 3a0:	0e 94 1a 03 	call	0x634	; 0x634 <__fp_powser>
 3a4:	8b 01       	movw	r16, r22
 3a6:	be 01       	movw	r22, r28
 3a8:	ec 01       	movw	r28, r24
 3aa:	fb 2e       	mov	r15, r27
 3ac:	6f 57       	subi	r22, 0x7F	; 127
 3ae:	71 09       	sbc	r23, r1
 3b0:	75 95       	asr	r23
 3b2:	77 1f       	adc	r23, r23
 3b4:	88 0b       	sbc	r24, r24
 3b6:	99 0b       	sbc	r25, r25
 3b8:	0e 94 c8 02 	call	0x590	; 0x590 <__floatsisf>
 3bc:	28 e1       	ldi	r18, 0x18	; 24
 3be:	32 e7       	ldi	r19, 0x72	; 114
 3c0:	41 e3       	ldi	r20, 0x31	; 49
 3c2:	5f e3       	ldi	r21, 0x3F	; 63
 3c4:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__mulsf3x>
 3c8:	af 2d       	mov	r26, r15
 3ca:	98 01       	movw	r18, r16
 3cc:	ae 01       	movw	r20, r28
 3ce:	ff 90       	pop	r15
 3d0:	0f 91       	pop	r16
 3d2:	1f 91       	pop	r17
 3d4:	cf 91       	pop	r28
 3d6:	df 91       	pop	r29
 3d8:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__addsf3x>
 3dc:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__fp_round>
 3e0:	0e 94 41 03 	call	0x682	; 0x682 <__fp_pscA>
 3e4:	38 f0       	brcs	.+14     	; 0x3f4 <log+0xa4>
 3e6:	0e 94 48 03 	call	0x690	; 0x690 <__fp_pscB>
 3ea:	20 f0       	brcs	.+8      	; 0x3f4 <log+0xa4>
 3ec:	95 23       	and	r25, r21
 3ee:	11 f0       	breq	.+4      	; 0x3f4 <log+0xa4>
 3f0:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 3f4:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_nan>
 3f8:	11 24       	eor	r1, r1
 3fa:	0c 94 83 03 	jmp	0x706	; 0x706 <__fp_szero>

000003fe <__mulsf3x>:
 3fe:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__fp_split3>
 402:	70 f3       	brcs	.-36     	; 0x3e0 <log+0x90>

00000404 <__mulsf3_pse>:
 404:	95 9f       	mul	r25, r21
 406:	c1 f3       	breq	.-16     	; 0x3f8 <log+0xa8>
 408:	95 0f       	add	r25, r21
 40a:	50 e0       	ldi	r21, 0x00	; 0
 40c:	55 1f       	adc	r21, r21
 40e:	62 9f       	mul	r22, r18
 410:	f0 01       	movw	r30, r0
 412:	72 9f       	mul	r23, r18
 414:	bb 27       	eor	r27, r27
 416:	f0 0d       	add	r31, r0
 418:	b1 1d       	adc	r27, r1
 41a:	63 9f       	mul	r22, r19
 41c:	aa 27       	eor	r26, r26
 41e:	f0 0d       	add	r31, r0
 420:	b1 1d       	adc	r27, r1
 422:	aa 1f       	adc	r26, r26
 424:	64 9f       	mul	r22, r20
 426:	66 27       	eor	r22, r22
 428:	b0 0d       	add	r27, r0
 42a:	a1 1d       	adc	r26, r1
 42c:	66 1f       	adc	r22, r22
 42e:	82 9f       	mul	r24, r18
 430:	22 27       	eor	r18, r18
 432:	b0 0d       	add	r27, r0
 434:	a1 1d       	adc	r26, r1
 436:	62 1f       	adc	r22, r18
 438:	73 9f       	mul	r23, r19
 43a:	b0 0d       	add	r27, r0
 43c:	a1 1d       	adc	r26, r1
 43e:	62 1f       	adc	r22, r18
 440:	83 9f       	mul	r24, r19
 442:	a0 0d       	add	r26, r0
 444:	61 1d       	adc	r22, r1
 446:	22 1f       	adc	r18, r18
 448:	74 9f       	mul	r23, r20
 44a:	33 27       	eor	r19, r19
 44c:	a0 0d       	add	r26, r0
 44e:	61 1d       	adc	r22, r1
 450:	23 1f       	adc	r18, r19
 452:	84 9f       	mul	r24, r20
 454:	60 0d       	add	r22, r0
 456:	21 1d       	adc	r18, r1
 458:	82 2f       	mov	r24, r18
 45a:	76 2f       	mov	r23, r22
 45c:	6a 2f       	mov	r22, r26
 45e:	11 24       	eor	r1, r1
 460:	9f 57       	subi	r25, 0x7F	; 127
 462:	50 40       	sbci	r21, 0x00	; 0
 464:	9a f0       	brmi	.+38     	; 0x48c <__mulsf3_pse+0x88>
 466:	f1 f0       	breq	.+60     	; 0x4a4 <__mulsf3_pse+0xa0>
 468:	88 23       	and	r24, r24
 46a:	4a f0       	brmi	.+18     	; 0x47e <__mulsf3_pse+0x7a>
 46c:	ee 0f       	add	r30, r30
 46e:	ff 1f       	adc	r31, r31
 470:	bb 1f       	adc	r27, r27
 472:	66 1f       	adc	r22, r22
 474:	77 1f       	adc	r23, r23
 476:	88 1f       	adc	r24, r24
 478:	91 50       	subi	r25, 0x01	; 1
 47a:	50 40       	sbci	r21, 0x00	; 0
 47c:	a9 f7       	brne	.-22     	; 0x468 <__mulsf3_pse+0x64>
 47e:	9e 3f       	cpi	r25, 0xFE	; 254
 480:	51 05       	cpc	r21, r1
 482:	80 f0       	brcs	.+32     	; 0x4a4 <__mulsf3_pse+0xa0>
 484:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 488:	0c 94 83 03 	jmp	0x706	; 0x706 <__fp_szero>
 48c:	5f 3f       	cpi	r21, 0xFF	; 255
 48e:	e4 f3       	brlt	.-8      	; 0x488 <__mulsf3_pse+0x84>
 490:	98 3e       	cpi	r25, 0xE8	; 232
 492:	d4 f3       	brlt	.-12     	; 0x488 <__mulsf3_pse+0x84>
 494:	86 95       	lsr	r24
 496:	77 95       	ror	r23
 498:	67 95       	ror	r22
 49a:	b7 95       	ror	r27
 49c:	f7 95       	ror	r31
 49e:	e7 95       	ror	r30
 4a0:	9f 5f       	subi	r25, 0xFF	; 255
 4a2:	c1 f7       	brne	.-16     	; 0x494 <__mulsf3_pse+0x90>
 4a4:	fe 2b       	or	r31, r30
 4a6:	88 0f       	add	r24, r24
 4a8:	91 1d       	adc	r25, r1
 4aa:	96 95       	lsr	r25
 4ac:	87 95       	ror	r24
 4ae:	97 f9       	bld	r25, 7
 4b0:	08 95       	ret

000004b2 <__subsf3>:
 4b2:	50 58       	subi	r21, 0x80	; 128

000004b4 <__addsf3>:
 4b4:	bb 27       	eor	r27, r27
 4b6:	aa 27       	eor	r26, r26
 4b8:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__addsf3x>
 4bc:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__fp_round>
 4c0:	0e 94 41 03 	call	0x682	; 0x682 <__fp_pscA>
 4c4:	38 f0       	brcs	.+14     	; 0x4d4 <__addsf3+0x20>
 4c6:	0e 94 48 03 	call	0x690	; 0x690 <__fp_pscB>
 4ca:	20 f0       	brcs	.+8      	; 0x4d4 <__addsf3+0x20>
 4cc:	39 f4       	brne	.+14     	; 0x4dc <__addsf3+0x28>
 4ce:	9f 3f       	cpi	r25, 0xFF	; 255
 4d0:	19 f4       	brne	.+6      	; 0x4d8 <__addsf3+0x24>
 4d2:	26 f4       	brtc	.+8      	; 0x4dc <__addsf3+0x28>
 4d4:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_nan>
 4d8:	0e f4       	brtc	.+2      	; 0x4dc <__addsf3+0x28>
 4da:	e0 95       	com	r30
 4dc:	e7 fb       	bst	r30, 7
 4de:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>

000004e2 <__addsf3x>:
 4e2:	e9 2f       	mov	r30, r25
 4e4:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__fp_split3>
 4e8:	58 f3       	brcs	.-42     	; 0x4c0 <__addsf3+0xc>
 4ea:	ba 17       	cp	r27, r26
 4ec:	62 07       	cpc	r22, r18
 4ee:	73 07       	cpc	r23, r19
 4f0:	84 07       	cpc	r24, r20
 4f2:	95 07       	cpc	r25, r21
 4f4:	20 f0       	brcs	.+8      	; 0x4fe <__addsf3x+0x1c>
 4f6:	79 f4       	brne	.+30     	; 0x516 <__addsf3x+0x34>
 4f8:	a6 f5       	brtc	.+104    	; 0x562 <__addsf3x+0x80>
 4fa:	0c 94 82 03 	jmp	0x704	; 0x704 <__fp_zero>
 4fe:	0e f4       	brtc	.+2      	; 0x502 <__addsf3x+0x20>
 500:	e0 95       	com	r30
 502:	0b 2e       	mov	r0, r27
 504:	ba 2f       	mov	r27, r26
 506:	a0 2d       	mov	r26, r0
 508:	0b 01       	movw	r0, r22
 50a:	b9 01       	movw	r22, r18
 50c:	90 01       	movw	r18, r0
 50e:	0c 01       	movw	r0, r24
 510:	ca 01       	movw	r24, r20
 512:	a0 01       	movw	r20, r0
 514:	11 24       	eor	r1, r1
 516:	ff 27       	eor	r31, r31
 518:	59 1b       	sub	r21, r25
 51a:	99 f0       	breq	.+38     	; 0x542 <__addsf3x+0x60>
 51c:	59 3f       	cpi	r21, 0xF9	; 249
 51e:	50 f4       	brcc	.+20     	; 0x534 <__addsf3x+0x52>
 520:	50 3e       	cpi	r21, 0xE0	; 224
 522:	68 f1       	brcs	.+90     	; 0x57e <__addsf3x+0x9c>
 524:	1a 16       	cp	r1, r26
 526:	f0 40       	sbci	r31, 0x00	; 0
 528:	a2 2f       	mov	r26, r18
 52a:	23 2f       	mov	r18, r19
 52c:	34 2f       	mov	r19, r20
 52e:	44 27       	eor	r20, r20
 530:	58 5f       	subi	r21, 0xF8	; 248
 532:	f3 cf       	rjmp	.-26     	; 0x51a <__addsf3x+0x38>
 534:	46 95       	lsr	r20
 536:	37 95       	ror	r19
 538:	27 95       	ror	r18
 53a:	a7 95       	ror	r26
 53c:	f0 40       	sbci	r31, 0x00	; 0
 53e:	53 95       	inc	r21
 540:	c9 f7       	brne	.-14     	; 0x534 <__addsf3x+0x52>
 542:	7e f4       	brtc	.+30     	; 0x562 <__addsf3x+0x80>
 544:	1f 16       	cp	r1, r31
 546:	ba 0b       	sbc	r27, r26
 548:	62 0b       	sbc	r22, r18
 54a:	73 0b       	sbc	r23, r19
 54c:	84 0b       	sbc	r24, r20
 54e:	ba f0       	brmi	.+46     	; 0x57e <__addsf3x+0x9c>
 550:	91 50       	subi	r25, 0x01	; 1
 552:	a1 f0       	breq	.+40     	; 0x57c <__addsf3x+0x9a>
 554:	ff 0f       	add	r31, r31
 556:	bb 1f       	adc	r27, r27
 558:	66 1f       	adc	r22, r22
 55a:	77 1f       	adc	r23, r23
 55c:	88 1f       	adc	r24, r24
 55e:	c2 f7       	brpl	.-16     	; 0x550 <__addsf3x+0x6e>
 560:	0e c0       	rjmp	.+28     	; 0x57e <__addsf3x+0x9c>
 562:	ba 0f       	add	r27, r26
 564:	62 1f       	adc	r22, r18
 566:	73 1f       	adc	r23, r19
 568:	84 1f       	adc	r24, r20
 56a:	48 f4       	brcc	.+18     	; 0x57e <__addsf3x+0x9c>
 56c:	87 95       	ror	r24
 56e:	77 95       	ror	r23
 570:	67 95       	ror	r22
 572:	b7 95       	ror	r27
 574:	f7 95       	ror	r31
 576:	9e 3f       	cpi	r25, 0xFE	; 254
 578:	08 f0       	brcs	.+2      	; 0x57c <__addsf3x+0x9a>
 57a:	b0 cf       	rjmp	.-160    	; 0x4dc <__addsf3+0x28>
 57c:	93 95       	inc	r25
 57e:	88 0f       	add	r24, r24
 580:	08 f0       	brcs	.+2      	; 0x584 <__addsf3x+0xa2>
 582:	99 27       	eor	r25, r25
 584:	ee 0f       	add	r30, r30
 586:	97 95       	ror	r25
 588:	87 95       	ror	r24
 58a:	08 95       	ret

0000058c <__floatunsisf>:
 58c:	e8 94       	clt
 58e:	09 c0       	rjmp	.+18     	; 0x5a2 <__floatsisf+0x12>

00000590 <__floatsisf>:
 590:	97 fb       	bst	r25, 7
 592:	3e f4       	brtc	.+14     	; 0x5a2 <__floatsisf+0x12>
 594:	90 95       	com	r25
 596:	80 95       	com	r24
 598:	70 95       	com	r23
 59a:	61 95       	neg	r22
 59c:	7f 4f       	sbci	r23, 0xFF	; 255
 59e:	8f 4f       	sbci	r24, 0xFF	; 255
 5a0:	9f 4f       	sbci	r25, 0xFF	; 255
 5a2:	99 23       	and	r25, r25
 5a4:	a9 f0       	breq	.+42     	; 0x5d0 <__floatsisf+0x40>
 5a6:	f9 2f       	mov	r31, r25
 5a8:	96 e9       	ldi	r25, 0x96	; 150
 5aa:	bb 27       	eor	r27, r27
 5ac:	93 95       	inc	r25
 5ae:	f6 95       	lsr	r31
 5b0:	87 95       	ror	r24
 5b2:	77 95       	ror	r23
 5b4:	67 95       	ror	r22
 5b6:	b7 95       	ror	r27
 5b8:	f1 11       	cpse	r31, r1
 5ba:	f8 cf       	rjmp	.-16     	; 0x5ac <__floatsisf+0x1c>
 5bc:	fa f4       	brpl	.+62     	; 0x5fc <__floatsisf+0x6c>
 5be:	bb 0f       	add	r27, r27
 5c0:	11 f4       	brne	.+4      	; 0x5c6 <__floatsisf+0x36>
 5c2:	60 ff       	sbrs	r22, 0
 5c4:	1b c0       	rjmp	.+54     	; 0x5fc <__floatsisf+0x6c>
 5c6:	6f 5f       	subi	r22, 0xFF	; 255
 5c8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ca:	8f 4f       	sbci	r24, 0xFF	; 255
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	16 c0       	rjmp	.+44     	; 0x5fc <__floatsisf+0x6c>
 5d0:	88 23       	and	r24, r24
 5d2:	11 f0       	breq	.+4      	; 0x5d8 <__floatsisf+0x48>
 5d4:	96 e9       	ldi	r25, 0x96	; 150
 5d6:	11 c0       	rjmp	.+34     	; 0x5fa <__floatsisf+0x6a>
 5d8:	77 23       	and	r23, r23
 5da:	21 f0       	breq	.+8      	; 0x5e4 <__floatsisf+0x54>
 5dc:	9e e8       	ldi	r25, 0x8E	; 142
 5de:	87 2f       	mov	r24, r23
 5e0:	76 2f       	mov	r23, r22
 5e2:	05 c0       	rjmp	.+10     	; 0x5ee <__floatsisf+0x5e>
 5e4:	66 23       	and	r22, r22
 5e6:	71 f0       	breq	.+28     	; 0x604 <__floatsisf+0x74>
 5e8:	96 e8       	ldi	r25, 0x86	; 134
 5ea:	86 2f       	mov	r24, r22
 5ec:	70 e0       	ldi	r23, 0x00	; 0
 5ee:	60 e0       	ldi	r22, 0x00	; 0
 5f0:	2a f0       	brmi	.+10     	; 0x5fc <__floatsisf+0x6c>
 5f2:	9a 95       	dec	r25
 5f4:	66 0f       	add	r22, r22
 5f6:	77 1f       	adc	r23, r23
 5f8:	88 1f       	adc	r24, r24
 5fa:	da f7       	brpl	.-10     	; 0x5f2 <__floatsisf+0x62>
 5fc:	88 0f       	add	r24, r24
 5fe:	96 95       	lsr	r25
 600:	87 95       	ror	r24
 602:	97 f9       	bld	r25, 7
 604:	08 95       	ret

00000606 <__fp_inf>:
 606:	97 f9       	bld	r25, 7
 608:	9f 67       	ori	r25, 0x7F	; 127
 60a:	80 e8       	ldi	r24, 0x80	; 128
 60c:	70 e0       	ldi	r23, 0x00	; 0
 60e:	60 e0       	ldi	r22, 0x00	; 0
 610:	08 95       	ret

00000612 <__fp_mpack>:
 612:	9f 3f       	cpi	r25, 0xFF	; 255
 614:	31 f0       	breq	.+12     	; 0x622 <__fp_mpack_finite+0xc>

00000616 <__fp_mpack_finite>:
 616:	91 50       	subi	r25, 0x01	; 1
 618:	20 f4       	brcc	.+8      	; 0x622 <__fp_mpack_finite+0xc>
 61a:	87 95       	ror	r24
 61c:	77 95       	ror	r23
 61e:	67 95       	ror	r22
 620:	b7 95       	ror	r27
 622:	88 0f       	add	r24, r24
 624:	91 1d       	adc	r25, r1
 626:	96 95       	lsr	r25
 628:	87 95       	ror	r24
 62a:	97 f9       	bld	r25, 7
 62c:	08 95       	ret

0000062e <__fp_nan>:
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	80 ec       	ldi	r24, 0xC0	; 192
 632:	08 95       	ret

00000634 <__fp_powser>:
 634:	df 93       	push	r29
 636:	cf 93       	push	r28
 638:	1f 93       	push	r17
 63a:	0f 93       	push	r16
 63c:	ff 92       	push	r15
 63e:	ef 92       	push	r14
 640:	df 92       	push	r13
 642:	7b 01       	movw	r14, r22
 644:	8c 01       	movw	r16, r24
 646:	68 94       	set
 648:	06 c0       	rjmp	.+12     	; 0x656 <__fp_powser+0x22>
 64a:	da 2e       	mov	r13, r26
 64c:	ef 01       	movw	r28, r30
 64e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__mulsf3x>
 652:	fe 01       	movw	r30, r28
 654:	e8 94       	clt
 656:	a5 91       	lpm	r26, Z+
 658:	25 91       	lpm	r18, Z+
 65a:	35 91       	lpm	r19, Z+
 65c:	45 91       	lpm	r20, Z+
 65e:	55 91       	lpm	r21, Z+
 660:	a6 f3       	brts	.-24     	; 0x64a <__fp_powser+0x16>
 662:	ef 01       	movw	r28, r30
 664:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__addsf3x>
 668:	fe 01       	movw	r30, r28
 66a:	97 01       	movw	r18, r14
 66c:	a8 01       	movw	r20, r16
 66e:	da 94       	dec	r13
 670:	69 f7       	brne	.-38     	; 0x64c <__fp_powser+0x18>
 672:	df 90       	pop	r13
 674:	ef 90       	pop	r14
 676:	ff 90       	pop	r15
 678:	0f 91       	pop	r16
 67a:	1f 91       	pop	r17
 67c:	cf 91       	pop	r28
 67e:	df 91       	pop	r29
 680:	08 95       	ret

00000682 <__fp_pscA>:
 682:	00 24       	eor	r0, r0
 684:	0a 94       	dec	r0
 686:	16 16       	cp	r1, r22
 688:	17 06       	cpc	r1, r23
 68a:	18 06       	cpc	r1, r24
 68c:	09 06       	cpc	r0, r25
 68e:	08 95       	ret

00000690 <__fp_pscB>:
 690:	00 24       	eor	r0, r0
 692:	0a 94       	dec	r0
 694:	12 16       	cp	r1, r18
 696:	13 06       	cpc	r1, r19
 698:	14 06       	cpc	r1, r20
 69a:	05 06       	cpc	r0, r21
 69c:	08 95       	ret

0000069e <__fp_round>:
 69e:	09 2e       	mov	r0, r25
 6a0:	03 94       	inc	r0
 6a2:	00 0c       	add	r0, r0
 6a4:	11 f4       	brne	.+4      	; 0x6aa <__fp_round+0xc>
 6a6:	88 23       	and	r24, r24
 6a8:	52 f0       	brmi	.+20     	; 0x6be <__fp_round+0x20>
 6aa:	bb 0f       	add	r27, r27
 6ac:	40 f4       	brcc	.+16     	; 0x6be <__fp_round+0x20>
 6ae:	bf 2b       	or	r27, r31
 6b0:	11 f4       	brne	.+4      	; 0x6b6 <__fp_round+0x18>
 6b2:	60 ff       	sbrs	r22, 0
 6b4:	04 c0       	rjmp	.+8      	; 0x6be <__fp_round+0x20>
 6b6:	6f 5f       	subi	r22, 0xFF	; 255
 6b8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ba:	8f 4f       	sbci	r24, 0xFF	; 255
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	08 95       	ret

000006c0 <__fp_split3>:
 6c0:	57 fd       	sbrc	r21, 7
 6c2:	90 58       	subi	r25, 0x80	; 128
 6c4:	44 0f       	add	r20, r20
 6c6:	55 1f       	adc	r21, r21
 6c8:	59 f0       	breq	.+22     	; 0x6e0 <__fp_splitA+0x10>
 6ca:	5f 3f       	cpi	r21, 0xFF	; 255
 6cc:	71 f0       	breq	.+28     	; 0x6ea <__fp_splitA+0x1a>
 6ce:	47 95       	ror	r20

000006d0 <__fp_splitA>:
 6d0:	88 0f       	add	r24, r24
 6d2:	97 fb       	bst	r25, 7
 6d4:	99 1f       	adc	r25, r25
 6d6:	61 f0       	breq	.+24     	; 0x6f0 <__fp_splitA+0x20>
 6d8:	9f 3f       	cpi	r25, 0xFF	; 255
 6da:	79 f0       	breq	.+30     	; 0x6fa <__fp_splitA+0x2a>
 6dc:	87 95       	ror	r24
 6de:	08 95       	ret
 6e0:	12 16       	cp	r1, r18
 6e2:	13 06       	cpc	r1, r19
 6e4:	14 06       	cpc	r1, r20
 6e6:	55 1f       	adc	r21, r21
 6e8:	f2 cf       	rjmp	.-28     	; 0x6ce <__fp_split3+0xe>
 6ea:	46 95       	lsr	r20
 6ec:	f1 df       	rcall	.-30     	; 0x6d0 <__fp_splitA>
 6ee:	08 c0       	rjmp	.+16     	; 0x700 <__fp_splitA+0x30>
 6f0:	16 16       	cp	r1, r22
 6f2:	17 06       	cpc	r1, r23
 6f4:	18 06       	cpc	r1, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	f1 cf       	rjmp	.-30     	; 0x6dc <__fp_splitA+0xc>
 6fa:	86 95       	lsr	r24
 6fc:	71 05       	cpc	r23, r1
 6fe:	61 05       	cpc	r22, r1
 700:	08 94       	sec
 702:	08 95       	ret

00000704 <__fp_zero>:
 704:	e8 94       	clt

00000706 <__fp_szero>:
 706:	bb 27       	eor	r27, r27
 708:	66 27       	eor	r22, r22
 70a:	77 27       	eor	r23, r23
 70c:	cb 01       	movw	r24, r22
 70e:	97 f9       	bld	r25, 7
 710:	08 95       	ret

00000712 <_exit>:
 712:	f8 94       	cli

00000714 <__stop_program>:
 714:	ff cf       	rjmp	.-2      	; 0x714 <__stop_program>

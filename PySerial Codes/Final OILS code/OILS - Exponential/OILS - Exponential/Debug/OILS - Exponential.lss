
OILS - Exponential.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000080e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000862  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000862  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000894  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000036b5  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000328c  00000000  00000000  00003fb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005cd  00000000  00000000  00007245  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  00007814  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002514  00000000  00000000  00007884  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000202  00000000  00000000  00009d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00009f9a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 12 01 	jmp	0x224	; 0x224 <__ctors_end>
   4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
   8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
   c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  10:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  14:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  18:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  1c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  20:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  24:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  28:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  2c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  30:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  34:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  38:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  3c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  40:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  44:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  48:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  4c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  50:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  54:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  58:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  5c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  60:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  64:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  68:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  6c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  70:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  74:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  78:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  7c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  80:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  84:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  88:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  8c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  90:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  94:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  98:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  9c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  a0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  a4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  a8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  ac:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  b0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  b4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  b8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  bc:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  c0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  c4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  c8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  cc:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  d0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  d4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  d8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  dc:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  e0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  e4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  e8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  ec:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  f0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  f4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  f8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
  fc:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 100:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 104:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 108:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 10c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 110:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 114:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 118:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 11c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 120:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 124:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 128:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 12c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 130:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 134:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 138:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 13c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 140:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 144:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 148:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 14c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 150:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 154:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 158:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 15c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 160:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 164:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 168:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 16c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 170:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 174:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 178:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 17c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 180:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 184:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 188:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 18c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 190:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 194:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 198:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 19c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1a0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1a4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1a8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1ac:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1b0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1b4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1b8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1bc:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1c0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1c4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1c8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1cc:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1d0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1d4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1d8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1dc:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1e0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1e4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1e8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1ec:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1f0:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1f4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1f8:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__bad_interrupt>
 1fc:	07 63       	ori	r16, 0x37	; 55
 1fe:	42 36       	cpi	r20, 0x62	; 98
 200:	b7 9b       	sbis	0x16, 7	; 22
 202:	d8 a7       	std	Y+40, r29	; 0x28
 204:	1a 39       	cpi	r17, 0x9A	; 154
 206:	68 56       	subi	r22, 0x68	; 104
 208:	18 ae       	std	Y+56, r1	; 0x38
 20a:	ba ab       	std	Y+50, r27	; 0x32
 20c:	55 8c       	ldd	r5, Z+29	; 0x1d
 20e:	1d 3c       	cpi	r17, 0xCD	; 205
 210:	b7 cc       	rjmp	.-1682   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
 212:	57 63       	ori	r21, 0x37	; 55
 214:	bd 6d       	ori	r27, 0xDD	; 221
 216:	ed fd       	.word	0xfded	; ????
 218:	75 3e       	cpi	r23, 0xE5	; 229
 21a:	f6 17       	cp	r31, r22
 21c:	72 31       	cpi	r23, 0x12	; 18
 21e:	bf 00       	.word	0x00bf	; ????
 220:	00 00       	nop
 222:	80 3f       	cpi	r24, 0xF0	; 240

00000224 <__ctors_end>:
 224:	11 24       	eor	r1, r1
 226:	1f be       	out	0x3f, r1	; 63
 228:	cf ef       	ldi	r28, 0xFF	; 255
 22a:	cd bf       	out	0x3d, r28	; 61
 22c:	df e3       	ldi	r29, 0x3F	; 63
 22e:	de bf       	out	0x3e, r29	; 62
 230:	00 e0       	ldi	r16, 0x00	; 0
 232:	0c bf       	out	0x3c, r16	; 60
 234:	0e 94 30 01 	call	0x260	; 0x260 <main>
 238:	0c 94 05 04 	jmp	0x80a	; 0x80a <_exit>

0000023c <__bad_interrupt>:
 23c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000240 <_Z8transmith>:

void transmit(uint8_t dat)
{
	// This is the transmit function using the USART functionality of ATXmega128A3U.
	// Here, we transmit the data 'dat', which has to be 8 bits of data, or 1 byte.
	while(!(USARTC0_STATUS & (USART_DREIF_bm)));		// Until data register empty interrupt flag is set, wait. (So that wrong data is not sent.)
 240:	e1 ea       	ldi	r30, 0xA1	; 161
 242:	f8 e0       	ldi	r31, 0x08	; 8
 244:	90 81       	ld	r25, Z
 246:	95 ff       	sbrs	r25, 5
 248:	fd cf       	rjmp	.-6      	; 0x244 <_Z8transmith+0x4>
	USARTC0_DATA = dat;									// Load the data into the transmit buffer register. (Sends the data)
 24a:	80 93 a0 08 	sts	0x08A0, r24	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7008a0>
 24e:	08 95       	ret

00000250 <_Z7receivev>:

uint8_t receive(void)
{
	// This is the receive function using the USART functionality of ATXmega128A3U.
	// Here, we receive data in packets of 8 bits, or a byte.
	while(!(USARTC0_STATUS & (USART_RXCIF_bm)));		// Until receive complete interrupt flag is set, wait
 250:	e1 ea       	ldi	r30, 0xA1	; 161
 252:	f8 e0       	ldi	r31, 0x08	; 8
 254:	80 81       	ld	r24, Z
 256:	88 23       	and	r24, r24
 258:	ec f7       	brge	.-6      	; 0x254 <_Z7receivev+0x4>
	return USARTC0_DATA;								// Access the receive buffer register and return the contents of the buffer register.
 25a:	80 91 a0 08 	lds	r24, 0x08A0	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7008a0>
}
 25e:	08 95       	ret

00000260 <main>:

int main(void)
{
 260:	df 92       	push	r13
 262:	ef 92       	push	r14
 264:	ff 92       	push	r15
 266:	0f 93       	push	r16
 268:	1f 93       	push	r17
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	1f 92       	push	r1
 270:	cd b7       	in	r28, 0x3d	; 61
 272:	de b7       	in	r29, 0x3e	; 62
	// This is the main function of the program.
	PORTC_DIRSET = PIN3_bm;								// Setting TX pin as output (C3)
 274:	88 e0       	ldi	r24, 0x08	; 8
 276:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x700641>
	PORTC_DIRCLR = PIN2_bm;								// Setting RX pin as input (C2)
 27a:	84 e0       	ldi	r24, 0x04	; 4
 27c:	80 93 42 06 	sts	0x0642, r24	; 0x800642 <__TEXT_REGION_LENGTH__+0x700642>
	USARTC0_BAUDCTRLA = 12;								// Setting the BSEL number in the baud rate register for rate of 9600
 280:	8c e0       	ldi	r24, 0x0C	; 12
 282:	80 93 a6 08 	sts	0x08A6, r24	; 0x8008a6 <__TEXT_REGION_LENGTH__+0x7008a6>
	USARTC0_BAUDCTRLB = 0;								// Setting the BSCALE = 0
 286:	10 92 a7 08 	sts	0x08A7, r1	; 0x8008a7 <__TEXT_REGION_LENGTH__+0x7008a7>
	USARTC0_CTRLB = (USART_RXEN_bm)|(USART_TXEN_bm);	// Enable transmitter and receiver ports.
 28a:	88 e1       	ldi	r24, 0x18	; 24
 28c:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7008a4>
	USARTC0_CTRLC = (USART_CHSIZE_8BIT_gc)|(USART_PMODE_DISABLED_gc);  // 8 bits with 1 stop bit.
 290:	83 e0       	ldi	r24, 0x03	; 3
 292:	80 93 a5 08 	sts	0x08A5, r24	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7008a5>
 296:	0d e0       	ldi	r16, 0x0D	; 13
 298:	10 e0       	ldi	r17, 0x00	; 0

	for(int i = 0; i < 13; i++){
	// The actual data is to be received from Python via a start flag (From Python) followed by 4 bytes of data, which will be stored in the variables a, b, c, d.
	// That code will look something like this:
	while(1){
		uint8_t head1 = receive();
 29a:	0e 94 28 01 	call	0x250	; 0x250 <_Z7receivev>
		if (head1 == 'a'){
 29e:	81 36       	cpi	r24, 0x61	; 97
 2a0:	e1 f7       	brne	.-8      	; 0x29a <main+0x3a>
			//transmit('b');
			break;
		}
	}
	
	uint8_t a = receive();					// These are the received data from the Python Console, stored in a, b, c and d.
 2a2:	0e 94 28 01 	call	0x250	; 0x250 <_Z7receivev>
 2a6:	d8 2e       	mov	r13, r24
	uint8_t b = receive();
 2a8:	0e 94 28 01 	call	0x250	; 0x250 <_Z7receivev>
 2ac:	e8 2e       	mov	r14, r24
	uint8_t c = receive();
 2ae:	0e 94 28 01 	call	0x250	; 0x250 <_Z7receivev>
 2b2:	f8 2e       	mov	r15, r24
	uint8_t d = receive();
 2b4:	0e 94 28 01 	call	0x250	; 0x250 <_Z7receivev>
	//uint16_t address = (uint16_t)(TEST_PAGE_ADDR_1*EEPROM_PAGESIZE)|(TEST_BYTE_ADDR_a & (EEPROM_PAGESIZE-1));
	
	uint8_t foo = 0;
	uint8_t * address = &foo + 1;
	
	*(uint8_t*)(address+0) = a; // write a
 2b8:	da 82       	std	Y+2, r13	; 0x02
	*(uint8_t*)(address+1) = b; // write b
 2ba:	eb 82       	std	Y+3, r14	; 0x03
	*(uint8_t*)(address+2) = c; // write c
 2bc:	fc 82       	std	Y+4, r15	; 0x04
	*(uint8_t*)(address+3) = d; // write d
 2be:	8d 83       	std	Y+5, r24	; 0x05
	
	float float_input = *(float*)(address); // read float_input
	
	// Function Implemented here
	float float_output = exp(float_input);
 2c0:	6a 81       	ldd	r22, Y+2	; 0x02
 2c2:	7b 81       	ldd	r23, Y+3	; 0x03
 2c4:	8c 81       	ldd	r24, Y+4	; 0x04
 2c6:	9d 81       	ldd	r25, Y+5	; 0x05
 2c8:	0e 94 8f 01 	call	0x31e	; 0x31e <exp>
	*(float*)(address+4) = float_output; // Write float_output
 2cc:	6e 83       	std	Y+6, r22	; 0x06
 2ce:	7f 83       	std	Y+7, r23	; 0x07
 2d0:	88 87       	std	Y+8, r24	; 0x08
 2d2:	99 87       	std	Y+9, r25	; 0x09
	
	
	uint8_t e = *(uint8_t*)(address+4); // read e
	uint8_t f = *(uint8_t*)(address+5); // read f
 2d4:	df 80       	ldd	r13, Y+7	; 0x07
	uint8_t g = *(uint8_t*)(address+6); // read h
 2d6:	e8 84       	ldd	r14, Y+8	; 0x08
	uint8_t h = *(uint8_t*)(address+7); // read e
 2d8:	f9 84       	ldd	r15, Y+9	; 0x09
	
	transmit(e);
 2da:	8e 81       	ldd	r24, Y+6	; 0x06
 2dc:	0e 94 20 01 	call	0x240	; 0x240 <_Z8transmith>
	transmit(f);
 2e0:	8d 2d       	mov	r24, r13
 2e2:	0e 94 20 01 	call	0x240	; 0x240 <_Z8transmith>
	transmit(g);
 2e6:	8e 2d       	mov	r24, r14
 2e8:	0e 94 20 01 	call	0x240	; 0x240 <_Z8transmith>
	transmit(h);
 2ec:	8f 2d       	mov	r24, r15
 2ee:	0e 94 20 01 	call	0x240	; 0x240 <_Z8transmith>
 2f2:	01 50       	subi	r16, 0x01	; 1
 2f4:	11 09       	sbc	r17, r1
	USARTC0_BAUDCTRLB = 0;								// Setting the BSCALE = 0
	USARTC0_CTRLB = (USART_RXEN_bm)|(USART_TXEN_bm);	// Enable transmitter and receiver ports.
	USARTC0_CTRLC = (USART_CHSIZE_8BIT_gc)|(USART_PMODE_DISABLED_gc);  // 8 bits with 1 stop bit.


	for(int i = 0; i < 13; i++){
 2f6:	89 f6       	brne	.-94     	; 0x29a <main+0x3a>
	transmit(e);
	transmit(f);
	transmit(g);
	transmit(h);
	}
}
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	0f 90       	pop	r0
 2fe:	df 91       	pop	r29
 300:	cf 91       	pop	r28
 302:	1f 91       	pop	r17
 304:	0f 91       	pop	r16
 306:	ff 90       	pop	r15
 308:	ef 90       	pop	r14
 30a:	df 90       	pop	r13
 30c:	08 95       	ret
 30e:	29 f4       	brne	.+10     	; 0x31a <main+0xba>
 310:	16 f0       	brts	.+4      	; 0x316 <main+0xb6>
 312:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_inf>
 316:	0c 94 13 02 	jmp	0x426	; 0x426 <__fp_zero>
 31a:	0c 94 c7 01 	jmp	0x38e	; 0x38e <__fp_nan>

0000031e <exp>:
 31e:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__fp_splitA>
 322:	a8 f3       	brcs	.-22     	; 0x30e <main+0xae>
 324:	96 38       	cpi	r25, 0x86	; 134
 326:	a0 f7       	brcc	.-24     	; 0x310 <main+0xb0>
 328:	07 f8       	bld	r0, 7
 32a:	0f 92       	push	r0
 32c:	e8 94       	clt
 32e:	2b e3       	ldi	r18, 0x3B	; 59
 330:	3a ea       	ldi	r19, 0xAA	; 170
 332:	48 eb       	ldi	r20, 0xB8	; 184
 334:	5f e7       	ldi	r21, 0x7F	; 127
 336:	0e 94 a2 02 	call	0x544	; 0x544 <__mulsf3_pse>
 33a:	0f 92       	push	r0
 33c:	0f 92       	push	r0
 33e:	0f 92       	push	r0
 340:	4d b7       	in	r20, 0x3d	; 61
 342:	5e b7       	in	r21, 0x3e	; 62
 344:	0f 92       	push	r0
 346:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <modf>
 34a:	ec ef       	ldi	r30, 0xFC	; 252
 34c:	f1 e0       	ldi	r31, 0x01	; 1
 34e:	0e 94 ca 01 	call	0x394	; 0x394 <__fp_powser>
 352:	4f 91       	pop	r20
 354:	5f 91       	pop	r21
 356:	ef 91       	pop	r30
 358:	ff 91       	pop	r31
 35a:	e5 95       	asr	r30
 35c:	ee 1f       	adc	r30, r30
 35e:	ff 1f       	adc	r31, r31
 360:	49 f0       	breq	.+18     	; 0x374 <exp+0x56>
 362:	fe 57       	subi	r31, 0x7E	; 126
 364:	e0 68       	ori	r30, 0x80	; 128
 366:	44 27       	eor	r20, r20
 368:	ee 0f       	add	r30, r30
 36a:	44 1f       	adc	r20, r20
 36c:	fa 95       	dec	r31
 36e:	e1 f7       	brne	.-8      	; 0x368 <exp+0x4a>
 370:	41 95       	neg	r20
 372:	55 0b       	sbc	r21, r21
 374:	0e 94 26 02 	call	0x44c	; 0x44c <ldexp>
 378:	0f 90       	pop	r0
 37a:	07 fe       	sbrs	r0, 7
 37c:	0c 94 1a 02 	jmp	0x434	; 0x434 <inverse>
 380:	08 95       	ret

00000382 <__fp_inf>:
 382:	97 f9       	bld	r25, 7
 384:	9f 67       	ori	r25, 0x7F	; 127
 386:	80 e8       	ldi	r24, 0x80	; 128
 388:	70 e0       	ldi	r23, 0x00	; 0
 38a:	60 e0       	ldi	r22, 0x00	; 0
 38c:	08 95       	ret

0000038e <__fp_nan>:
 38e:	9f ef       	ldi	r25, 0xFF	; 255
 390:	80 ec       	ldi	r24, 0xC0	; 192
 392:	08 95       	ret

00000394 <__fp_powser>:
 394:	df 93       	push	r29
 396:	cf 93       	push	r28
 398:	1f 93       	push	r17
 39a:	0f 93       	push	r16
 39c:	ff 92       	push	r15
 39e:	ef 92       	push	r14
 3a0:	df 92       	push	r13
 3a2:	7b 01       	movw	r14, r22
 3a4:	8c 01       	movw	r16, r24
 3a6:	68 94       	set
 3a8:	06 c0       	rjmp	.+12     	; 0x3b6 <__fp_powser+0x22>
 3aa:	da 2e       	mov	r13, r26
 3ac:	ef 01       	movw	r28, r30
 3ae:	0e 94 9f 02 	call	0x53e	; 0x53e <__mulsf3x>
 3b2:	fe 01       	movw	r30, r28
 3b4:	e8 94       	clt
 3b6:	a5 91       	lpm	r26, Z+
 3b8:	25 91       	lpm	r18, Z+
 3ba:	35 91       	lpm	r19, Z+
 3bc:	45 91       	lpm	r20, Z+
 3be:	55 91       	lpm	r21, Z+
 3c0:	a6 f3       	brts	.-24     	; 0x3aa <__fp_powser+0x16>
 3c2:	ef 01       	movw	r28, r30
 3c4:	0e 94 11 03 	call	0x622	; 0x622 <__addsf3x>
 3c8:	fe 01       	movw	r30, r28
 3ca:	97 01       	movw	r18, r14
 3cc:	a8 01       	movw	r20, r16
 3ce:	da 94       	dec	r13
 3d0:	69 f7       	brne	.-38     	; 0x3ac <__fp_powser+0x18>
 3d2:	df 90       	pop	r13
 3d4:	ef 90       	pop	r14
 3d6:	ff 90       	pop	r15
 3d8:	0f 91       	pop	r16
 3da:	1f 91       	pop	r17
 3dc:	cf 91       	pop	r28
 3de:	df 91       	pop	r29
 3e0:	08 95       	ret

000003e2 <__fp_split3>:
 3e2:	57 fd       	sbrc	r21, 7
 3e4:	90 58       	subi	r25, 0x80	; 128
 3e6:	44 0f       	add	r20, r20
 3e8:	55 1f       	adc	r21, r21
 3ea:	59 f0       	breq	.+22     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ec:	5f 3f       	cpi	r21, 0xFF	; 255
 3ee:	71 f0       	breq	.+28     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3f0:	47 95       	ror	r20

000003f2 <__fp_splitA>:
 3f2:	88 0f       	add	r24, r24
 3f4:	97 fb       	bst	r25, 7
 3f6:	99 1f       	adc	r25, r25
 3f8:	61 f0       	breq	.+24     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fa:	9f 3f       	cpi	r25, 0xFF	; 255
 3fc:	79 f0       	breq	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	87 95       	ror	r24
 400:	08 95       	ret
 402:	12 16       	cp	r1, r18
 404:	13 06       	cpc	r1, r19
 406:	14 06       	cpc	r1, r20
 408:	55 1f       	adc	r21, r21
 40a:	f2 cf       	rjmp	.-28     	; 0x3f0 <__fp_split3+0xe>
 40c:	46 95       	lsr	r20
 40e:	f1 df       	rcall	.-30     	; 0x3f2 <__fp_splitA>
 410:	08 c0       	rjmp	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 412:	16 16       	cp	r1, r22
 414:	17 06       	cpc	r1, r23
 416:	18 06       	cpc	r1, r24
 418:	99 1f       	adc	r25, r25
 41a:	f1 cf       	rjmp	.-30     	; 0x3fe <__fp_splitA+0xc>
 41c:	86 95       	lsr	r24
 41e:	71 05       	cpc	r23, r1
 420:	61 05       	cpc	r22, r1
 422:	08 94       	sec
 424:	08 95       	ret

00000426 <__fp_zero>:
 426:	e8 94       	clt

00000428 <__fp_szero>:
 428:	bb 27       	eor	r27, r27
 42a:	66 27       	eor	r22, r22
 42c:	77 27       	eor	r23, r23
 42e:	cb 01       	movw	r24, r22
 430:	97 f9       	bld	r25, 7
 432:	08 95       	ret

00000434 <inverse>:
 434:	9b 01       	movw	r18, r22
 436:	ac 01       	movw	r20, r24
 438:	60 e0       	ldi	r22, 0x00	; 0
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	80 e8       	ldi	r24, 0x80	; 128
 43e:	9f e3       	ldi	r25, 0x3F	; 63
 440:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__divsf3>
 444:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_inf>
 448:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_mpack>

0000044c <ldexp>:
 44c:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__fp_splitA>
 450:	d8 f3       	brcs	.-10     	; 0x448 <inverse+0x14>
 452:	99 23       	and	r25, r25
 454:	c9 f3       	breq	.-14     	; 0x448 <inverse+0x14>
 456:	94 0f       	add	r25, r20
 458:	51 1d       	adc	r21, r1
 45a:	a3 f3       	brvs	.-24     	; 0x444 <inverse+0x10>
 45c:	91 50       	subi	r25, 0x01	; 1
 45e:	50 40       	sbci	r21, 0x00	; 0
 460:	94 f0       	brlt	.+36     	; 0x486 <ldexp+0x3a>
 462:	59 f0       	breq	.+22     	; 0x47a <ldexp+0x2e>
 464:	88 23       	and	r24, r24
 466:	32 f0       	brmi	.+12     	; 0x474 <ldexp+0x28>
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	88 1f       	adc	r24, r24
 46e:	91 50       	subi	r25, 0x01	; 1
 470:	50 40       	sbci	r21, 0x00	; 0
 472:	c1 f7       	brne	.-16     	; 0x464 <ldexp+0x18>
 474:	9e 3f       	cpi	r25, 0xFE	; 254
 476:	51 05       	cpc	r21, r1
 478:	2c f7       	brge	.-54     	; 0x444 <inverse+0x10>
 47a:	88 0f       	add	r24, r24
 47c:	91 1d       	adc	r25, r1
 47e:	96 95       	lsr	r25
 480:	87 95       	ror	r24
 482:	97 f9       	bld	r25, 7
 484:	08 95       	ret
 486:	5f 3f       	cpi	r21, 0xFF	; 255
 488:	ac f0       	brlt	.+42     	; 0x4b4 <ldexp+0x68>
 48a:	98 3e       	cpi	r25, 0xE8	; 232
 48c:	9c f0       	brlt	.+38     	; 0x4b4 <ldexp+0x68>
 48e:	bb 27       	eor	r27, r27
 490:	86 95       	lsr	r24
 492:	77 95       	ror	r23
 494:	67 95       	ror	r22
 496:	b7 95       	ror	r27
 498:	08 f4       	brcc	.+2      	; 0x49c <ldexp+0x50>
 49a:	b1 60       	ori	r27, 0x01	; 1
 49c:	93 95       	inc	r25
 49e:	c1 f7       	brne	.-16     	; 0x490 <ldexp+0x44>
 4a0:	bb 0f       	add	r27, r27
 4a2:	58 f7       	brcc	.-42     	; 0x47a <ldexp+0x2e>
 4a4:	11 f4       	brne	.+4      	; 0x4aa <ldexp+0x5e>
 4a6:	60 ff       	sbrs	r22, 0
 4a8:	e8 cf       	rjmp	.-48     	; 0x47a <ldexp+0x2e>
 4aa:	6f 5f       	subi	r22, 0xFF	; 255
 4ac:	7f 4f       	sbci	r23, 0xFF	; 255
 4ae:	8f 4f       	sbci	r24, 0xFF	; 255
 4b0:	9f 4f       	sbci	r25, 0xFF	; 255
 4b2:	e3 cf       	rjmp	.-58     	; 0x47a <ldexp+0x2e>
 4b4:	0c 94 14 02 	jmp	0x428	; 0x428 <__fp_szero>

000004b8 <modf>:
 4b8:	fa 01       	movw	r30, r20
 4ba:	dc 01       	movw	r26, r24
 4bc:	aa 0f       	add	r26, r26
 4be:	bb 1f       	adc	r27, r27
 4c0:	9b 01       	movw	r18, r22
 4c2:	ac 01       	movw	r20, r24
 4c4:	bf 57       	subi	r27, 0x7F	; 127
 4c6:	28 f4       	brcc	.+10     	; 0x4d2 <modf+0x1a>
 4c8:	22 27       	eor	r18, r18
 4ca:	33 27       	eor	r19, r19
 4cc:	44 27       	eor	r20, r20
 4ce:	50 78       	andi	r21, 0x80	; 128
 4d0:	20 c0       	rjmp	.+64     	; 0x512 <modf+0x5a>
 4d2:	b7 51       	subi	r27, 0x17	; 23
 4d4:	90 f4       	brcc	.+36     	; 0x4fa <modf+0x42>
 4d6:	ab 2f       	mov	r26, r27
 4d8:	00 24       	eor	r0, r0
 4da:	46 95       	lsr	r20
 4dc:	37 95       	ror	r19
 4de:	27 95       	ror	r18
 4e0:	01 1c       	adc	r0, r1
 4e2:	a3 95       	inc	r26
 4e4:	d2 f3       	brmi	.-12     	; 0x4da <modf+0x22>
 4e6:	00 20       	and	r0, r0
 4e8:	71 f0       	breq	.+28     	; 0x506 <modf+0x4e>
 4ea:	22 0f       	add	r18, r18
 4ec:	33 1f       	adc	r19, r19
 4ee:	44 1f       	adc	r20, r20
 4f0:	b3 95       	inc	r27
 4f2:	da f3       	brmi	.-10     	; 0x4ea <modf+0x32>
 4f4:	0e d0       	rcall	.+28     	; 0x512 <modf+0x5a>
 4f6:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__subsf3>
 4fa:	61 30       	cpi	r22, 0x01	; 1
 4fc:	71 05       	cpc	r23, r1
 4fe:	a0 e8       	ldi	r26, 0x80	; 128
 500:	8a 07       	cpc	r24, r26
 502:	b9 46       	sbci	r27, 0x69	; 105
 504:	30 f4       	brcc	.+12     	; 0x512 <modf+0x5a>
 506:	9b 01       	movw	r18, r22
 508:	ac 01       	movw	r20, r24
 50a:	66 27       	eor	r22, r22
 50c:	77 27       	eor	r23, r23
 50e:	88 27       	eor	r24, r24
 510:	90 78       	andi	r25, 0x80	; 128
 512:	30 96       	adiw	r30, 0x00	; 0
 514:	21 f0       	breq	.+8      	; 0x51e <modf+0x66>
 516:	20 83       	st	Z, r18
 518:	31 83       	std	Z+1, r19	; 0x01
 51a:	42 83       	std	Z+2, r20	; 0x02
 51c:	53 83       	std	Z+3, r21	; 0x03
 51e:	08 95       	ret
 520:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_pscA>
 524:	38 f0       	brcs	.+14     	; 0x534 <modf+0x7c>
 526:	0e 94 ed 03 	call	0x7da	; 0x7da <__fp_pscB>
 52a:	20 f0       	brcs	.+8      	; 0x534 <modf+0x7c>
 52c:	95 23       	and	r25, r21
 52e:	11 f0       	breq	.+4      	; 0x534 <modf+0x7c>
 530:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_inf>
 534:	0c 94 c7 01 	jmp	0x38e	; 0x38e <__fp_nan>
 538:	11 24       	eor	r1, r1
 53a:	0c 94 14 02 	jmp	0x428	; 0x428 <__fp_szero>

0000053e <__mulsf3x>:
 53e:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fp_split3>
 542:	70 f3       	brcs	.-36     	; 0x520 <modf+0x68>

00000544 <__mulsf3_pse>:
 544:	95 9f       	mul	r25, r21
 546:	c1 f3       	breq	.-16     	; 0x538 <modf+0x80>
 548:	95 0f       	add	r25, r21
 54a:	50 e0       	ldi	r21, 0x00	; 0
 54c:	55 1f       	adc	r21, r21
 54e:	62 9f       	mul	r22, r18
 550:	f0 01       	movw	r30, r0
 552:	72 9f       	mul	r23, r18
 554:	bb 27       	eor	r27, r27
 556:	f0 0d       	add	r31, r0
 558:	b1 1d       	adc	r27, r1
 55a:	63 9f       	mul	r22, r19
 55c:	aa 27       	eor	r26, r26
 55e:	f0 0d       	add	r31, r0
 560:	b1 1d       	adc	r27, r1
 562:	aa 1f       	adc	r26, r26
 564:	64 9f       	mul	r22, r20
 566:	66 27       	eor	r22, r22
 568:	b0 0d       	add	r27, r0
 56a:	a1 1d       	adc	r26, r1
 56c:	66 1f       	adc	r22, r22
 56e:	82 9f       	mul	r24, r18
 570:	22 27       	eor	r18, r18
 572:	b0 0d       	add	r27, r0
 574:	a1 1d       	adc	r26, r1
 576:	62 1f       	adc	r22, r18
 578:	73 9f       	mul	r23, r19
 57a:	b0 0d       	add	r27, r0
 57c:	a1 1d       	adc	r26, r1
 57e:	62 1f       	adc	r22, r18
 580:	83 9f       	mul	r24, r19
 582:	a0 0d       	add	r26, r0
 584:	61 1d       	adc	r22, r1
 586:	22 1f       	adc	r18, r18
 588:	74 9f       	mul	r23, r20
 58a:	33 27       	eor	r19, r19
 58c:	a0 0d       	add	r26, r0
 58e:	61 1d       	adc	r22, r1
 590:	23 1f       	adc	r18, r19
 592:	84 9f       	mul	r24, r20
 594:	60 0d       	add	r22, r0
 596:	21 1d       	adc	r18, r1
 598:	82 2f       	mov	r24, r18
 59a:	76 2f       	mov	r23, r22
 59c:	6a 2f       	mov	r22, r26
 59e:	11 24       	eor	r1, r1
 5a0:	9f 57       	subi	r25, 0x7F	; 127
 5a2:	50 40       	sbci	r21, 0x00	; 0
 5a4:	9a f0       	brmi	.+38     	; 0x5cc <__mulsf3_pse+0x88>
 5a6:	f1 f0       	breq	.+60     	; 0x5e4 <__mulsf3_pse+0xa0>
 5a8:	88 23       	and	r24, r24
 5aa:	4a f0       	brmi	.+18     	; 0x5be <__mulsf3_pse+0x7a>
 5ac:	ee 0f       	add	r30, r30
 5ae:	ff 1f       	adc	r31, r31
 5b0:	bb 1f       	adc	r27, r27
 5b2:	66 1f       	adc	r22, r22
 5b4:	77 1f       	adc	r23, r23
 5b6:	88 1f       	adc	r24, r24
 5b8:	91 50       	subi	r25, 0x01	; 1
 5ba:	50 40       	sbci	r21, 0x00	; 0
 5bc:	a9 f7       	brne	.-22     	; 0x5a8 <__mulsf3_pse+0x64>
 5be:	9e 3f       	cpi	r25, 0xFE	; 254
 5c0:	51 05       	cpc	r21, r1
 5c2:	80 f0       	brcs	.+32     	; 0x5e4 <__mulsf3_pse+0xa0>
 5c4:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_inf>
 5c8:	0c 94 14 02 	jmp	0x428	; 0x428 <__fp_szero>
 5cc:	5f 3f       	cpi	r21, 0xFF	; 255
 5ce:	e4 f3       	brlt	.-8      	; 0x5c8 <__mulsf3_pse+0x84>
 5d0:	98 3e       	cpi	r25, 0xE8	; 232
 5d2:	d4 f3       	brlt	.-12     	; 0x5c8 <__mulsf3_pse+0x84>
 5d4:	86 95       	lsr	r24
 5d6:	77 95       	ror	r23
 5d8:	67 95       	ror	r22
 5da:	b7 95       	ror	r27
 5dc:	f7 95       	ror	r31
 5de:	e7 95       	ror	r30
 5e0:	9f 5f       	subi	r25, 0xFF	; 255
 5e2:	c1 f7       	brne	.-16     	; 0x5d4 <__mulsf3_pse+0x90>
 5e4:	fe 2b       	or	r31, r30
 5e6:	88 0f       	add	r24, r24
 5e8:	91 1d       	adc	r25, r1
 5ea:	96 95       	lsr	r25
 5ec:	87 95       	ror	r24
 5ee:	97 f9       	bld	r25, 7
 5f0:	08 95       	ret

000005f2 <__subsf3>:
 5f2:	50 58       	subi	r21, 0x80	; 128

000005f4 <__addsf3>:
 5f4:	bb 27       	eor	r27, r27
 5f6:	aa 27       	eor	r26, r26
 5f8:	0e 94 11 03 	call	0x622	; 0x622 <__addsf3x>
 5fc:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <__fp_round>
 600:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_pscA>
 604:	38 f0       	brcs	.+14     	; 0x614 <__addsf3+0x20>
 606:	0e 94 ed 03 	call	0x7da	; 0x7da <__fp_pscB>
 60a:	20 f0       	brcs	.+8      	; 0x614 <__addsf3+0x20>
 60c:	39 f4       	brne	.+14     	; 0x61c <__addsf3+0x28>
 60e:	9f 3f       	cpi	r25, 0xFF	; 255
 610:	19 f4       	brne	.+6      	; 0x618 <__addsf3+0x24>
 612:	26 f4       	brtc	.+8      	; 0x61c <__addsf3+0x28>
 614:	0c 94 c7 01 	jmp	0x38e	; 0x38e <__fp_nan>
 618:	0e f4       	brtc	.+2      	; 0x61c <__addsf3+0x28>
 61a:	e0 95       	com	r30
 61c:	e7 fb       	bst	r30, 7
 61e:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_inf>

00000622 <__addsf3x>:
 622:	e9 2f       	mov	r30, r25
 624:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fp_split3>
 628:	58 f3       	brcs	.-42     	; 0x600 <__addsf3+0xc>
 62a:	ba 17       	cp	r27, r26
 62c:	62 07       	cpc	r22, r18
 62e:	73 07       	cpc	r23, r19
 630:	84 07       	cpc	r24, r20
 632:	95 07       	cpc	r25, r21
 634:	20 f0       	brcs	.+8      	; 0x63e <__addsf3x+0x1c>
 636:	79 f4       	brne	.+30     	; 0x656 <__addsf3x+0x34>
 638:	a6 f5       	brtc	.+104    	; 0x6a2 <__addsf3x+0x80>
 63a:	0c 94 13 02 	jmp	0x426	; 0x426 <__fp_zero>
 63e:	0e f4       	brtc	.+2      	; 0x642 <__addsf3x+0x20>
 640:	e0 95       	com	r30
 642:	0b 2e       	mov	r0, r27
 644:	ba 2f       	mov	r27, r26
 646:	a0 2d       	mov	r26, r0
 648:	0b 01       	movw	r0, r22
 64a:	b9 01       	movw	r22, r18
 64c:	90 01       	movw	r18, r0
 64e:	0c 01       	movw	r0, r24
 650:	ca 01       	movw	r24, r20
 652:	a0 01       	movw	r20, r0
 654:	11 24       	eor	r1, r1
 656:	ff 27       	eor	r31, r31
 658:	59 1b       	sub	r21, r25
 65a:	99 f0       	breq	.+38     	; 0x682 <__addsf3x+0x60>
 65c:	59 3f       	cpi	r21, 0xF9	; 249
 65e:	50 f4       	brcc	.+20     	; 0x674 <__addsf3x+0x52>
 660:	50 3e       	cpi	r21, 0xE0	; 224
 662:	68 f1       	brcs	.+90     	; 0x6be <__addsf3x+0x9c>
 664:	1a 16       	cp	r1, r26
 666:	f0 40       	sbci	r31, 0x00	; 0
 668:	a2 2f       	mov	r26, r18
 66a:	23 2f       	mov	r18, r19
 66c:	34 2f       	mov	r19, r20
 66e:	44 27       	eor	r20, r20
 670:	58 5f       	subi	r21, 0xF8	; 248
 672:	f3 cf       	rjmp	.-26     	; 0x65a <__addsf3x+0x38>
 674:	46 95       	lsr	r20
 676:	37 95       	ror	r19
 678:	27 95       	ror	r18
 67a:	a7 95       	ror	r26
 67c:	f0 40       	sbci	r31, 0x00	; 0
 67e:	53 95       	inc	r21
 680:	c9 f7       	brne	.-14     	; 0x674 <__addsf3x+0x52>
 682:	7e f4       	brtc	.+30     	; 0x6a2 <__addsf3x+0x80>
 684:	1f 16       	cp	r1, r31
 686:	ba 0b       	sbc	r27, r26
 688:	62 0b       	sbc	r22, r18
 68a:	73 0b       	sbc	r23, r19
 68c:	84 0b       	sbc	r24, r20
 68e:	ba f0       	brmi	.+46     	; 0x6be <__addsf3x+0x9c>
 690:	91 50       	subi	r25, 0x01	; 1
 692:	a1 f0       	breq	.+40     	; 0x6bc <__addsf3x+0x9a>
 694:	ff 0f       	add	r31, r31
 696:	bb 1f       	adc	r27, r27
 698:	66 1f       	adc	r22, r22
 69a:	77 1f       	adc	r23, r23
 69c:	88 1f       	adc	r24, r24
 69e:	c2 f7       	brpl	.-16     	; 0x690 <__addsf3x+0x6e>
 6a0:	0e c0       	rjmp	.+28     	; 0x6be <__addsf3x+0x9c>
 6a2:	ba 0f       	add	r27, r26
 6a4:	62 1f       	adc	r22, r18
 6a6:	73 1f       	adc	r23, r19
 6a8:	84 1f       	adc	r24, r20
 6aa:	48 f4       	brcc	.+18     	; 0x6be <__addsf3x+0x9c>
 6ac:	87 95       	ror	r24
 6ae:	77 95       	ror	r23
 6b0:	67 95       	ror	r22
 6b2:	b7 95       	ror	r27
 6b4:	f7 95       	ror	r31
 6b6:	9e 3f       	cpi	r25, 0xFE	; 254
 6b8:	08 f0       	brcs	.+2      	; 0x6bc <__addsf3x+0x9a>
 6ba:	b0 cf       	rjmp	.-160    	; 0x61c <__addsf3+0x28>
 6bc:	93 95       	inc	r25
 6be:	88 0f       	add	r24, r24
 6c0:	08 f0       	brcs	.+2      	; 0x6c4 <__addsf3x+0xa2>
 6c2:	99 27       	eor	r25, r25
 6c4:	ee 0f       	add	r30, r30
 6c6:	97 95       	ror	r25
 6c8:	87 95       	ror	r24
 6ca:	08 95       	ret

000006cc <__divsf3>:
 6cc:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <__divsf3x>
 6d0:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <__fp_round>
 6d4:	0e 94 ed 03 	call	0x7da	; 0x7da <__fp_pscB>
 6d8:	58 f0       	brcs	.+22     	; 0x6f0 <__divsf3+0x24>
 6da:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_pscA>
 6de:	40 f0       	brcs	.+16     	; 0x6f0 <__divsf3+0x24>
 6e0:	29 f4       	brne	.+10     	; 0x6ec <__divsf3+0x20>
 6e2:	5f 3f       	cpi	r21, 0xFF	; 255
 6e4:	29 f0       	breq	.+10     	; 0x6f0 <__divsf3+0x24>
 6e6:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_inf>
 6ea:	51 11       	cpse	r21, r1
 6ec:	0c 94 14 02 	jmp	0x428	; 0x428 <__fp_szero>
 6f0:	0c 94 c7 01 	jmp	0x38e	; 0x38e <__fp_nan>

000006f4 <__divsf3x>:
 6f4:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fp_split3>
 6f8:	68 f3       	brcs	.-38     	; 0x6d4 <__divsf3+0x8>

000006fa <__divsf3_pse>:
 6fa:	99 23       	and	r25, r25
 6fc:	b1 f3       	breq	.-20     	; 0x6ea <__divsf3+0x1e>
 6fe:	55 23       	and	r21, r21
 700:	91 f3       	breq	.-28     	; 0x6e6 <__divsf3+0x1a>
 702:	95 1b       	sub	r25, r21
 704:	55 0b       	sbc	r21, r21
 706:	bb 27       	eor	r27, r27
 708:	aa 27       	eor	r26, r26
 70a:	62 17       	cp	r22, r18
 70c:	73 07       	cpc	r23, r19
 70e:	84 07       	cpc	r24, r20
 710:	38 f0       	brcs	.+14     	; 0x720 <__divsf3_pse+0x26>
 712:	9f 5f       	subi	r25, 0xFF	; 255
 714:	5f 4f       	sbci	r21, 0xFF	; 255
 716:	22 0f       	add	r18, r18
 718:	33 1f       	adc	r19, r19
 71a:	44 1f       	adc	r20, r20
 71c:	aa 1f       	adc	r26, r26
 71e:	a9 f3       	breq	.-22     	; 0x70a <__divsf3_pse+0x10>
 720:	35 d0       	rcall	.+106    	; 0x78c <__divsf3_pse+0x92>
 722:	0e 2e       	mov	r0, r30
 724:	3a f0       	brmi	.+14     	; 0x734 <__divsf3_pse+0x3a>
 726:	e0 e8       	ldi	r30, 0x80	; 128
 728:	32 d0       	rcall	.+100    	; 0x78e <__divsf3_pse+0x94>
 72a:	91 50       	subi	r25, 0x01	; 1
 72c:	50 40       	sbci	r21, 0x00	; 0
 72e:	e6 95       	lsr	r30
 730:	00 1c       	adc	r0, r0
 732:	ca f7       	brpl	.-14     	; 0x726 <__divsf3_pse+0x2c>
 734:	2b d0       	rcall	.+86     	; 0x78c <__divsf3_pse+0x92>
 736:	fe 2f       	mov	r31, r30
 738:	29 d0       	rcall	.+82     	; 0x78c <__divsf3_pse+0x92>
 73a:	66 0f       	add	r22, r22
 73c:	77 1f       	adc	r23, r23
 73e:	88 1f       	adc	r24, r24
 740:	bb 1f       	adc	r27, r27
 742:	26 17       	cp	r18, r22
 744:	37 07       	cpc	r19, r23
 746:	48 07       	cpc	r20, r24
 748:	ab 07       	cpc	r26, r27
 74a:	b0 e8       	ldi	r27, 0x80	; 128
 74c:	09 f0       	breq	.+2      	; 0x750 <__divsf3_pse+0x56>
 74e:	bb 0b       	sbc	r27, r27
 750:	80 2d       	mov	r24, r0
 752:	bf 01       	movw	r22, r30
 754:	ff 27       	eor	r31, r31
 756:	93 58       	subi	r25, 0x83	; 131
 758:	5f 4f       	sbci	r21, 0xFF	; 255
 75a:	3a f0       	brmi	.+14     	; 0x76a <__divsf3_pse+0x70>
 75c:	9e 3f       	cpi	r25, 0xFE	; 254
 75e:	51 05       	cpc	r21, r1
 760:	78 f0       	brcs	.+30     	; 0x780 <__divsf3_pse+0x86>
 762:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_inf>
 766:	0c 94 14 02 	jmp	0x428	; 0x428 <__fp_szero>
 76a:	5f 3f       	cpi	r21, 0xFF	; 255
 76c:	e4 f3       	brlt	.-8      	; 0x766 <__divsf3_pse+0x6c>
 76e:	98 3e       	cpi	r25, 0xE8	; 232
 770:	d4 f3       	brlt	.-12     	; 0x766 <__divsf3_pse+0x6c>
 772:	86 95       	lsr	r24
 774:	77 95       	ror	r23
 776:	67 95       	ror	r22
 778:	b7 95       	ror	r27
 77a:	f7 95       	ror	r31
 77c:	9f 5f       	subi	r25, 0xFF	; 255
 77e:	c9 f7       	brne	.-14     	; 0x772 <__divsf3_pse+0x78>
 780:	88 0f       	add	r24, r24
 782:	91 1d       	adc	r25, r1
 784:	96 95       	lsr	r25
 786:	87 95       	ror	r24
 788:	97 f9       	bld	r25, 7
 78a:	08 95       	ret
 78c:	e1 e0       	ldi	r30, 0x01	; 1
 78e:	66 0f       	add	r22, r22
 790:	77 1f       	adc	r23, r23
 792:	88 1f       	adc	r24, r24
 794:	bb 1f       	adc	r27, r27
 796:	62 17       	cp	r22, r18
 798:	73 07       	cpc	r23, r19
 79a:	84 07       	cpc	r24, r20
 79c:	ba 07       	cpc	r27, r26
 79e:	20 f0       	brcs	.+8      	; 0x7a8 <__divsf3_pse+0xae>
 7a0:	62 1b       	sub	r22, r18
 7a2:	73 0b       	sbc	r23, r19
 7a4:	84 0b       	sbc	r24, r20
 7a6:	ba 0b       	sbc	r27, r26
 7a8:	ee 1f       	adc	r30, r30
 7aa:	88 f7       	brcc	.-30     	; 0x78e <__divsf3_pse+0x94>
 7ac:	e0 95       	com	r30
 7ae:	08 95       	ret

000007b0 <__fp_mpack>:
 7b0:	9f 3f       	cpi	r25, 0xFF	; 255
 7b2:	31 f0       	breq	.+12     	; 0x7c0 <__fp_mpack_finite+0xc>

000007b4 <__fp_mpack_finite>:
 7b4:	91 50       	subi	r25, 0x01	; 1
 7b6:	20 f4       	brcc	.+8      	; 0x7c0 <__fp_mpack_finite+0xc>
 7b8:	87 95       	ror	r24
 7ba:	77 95       	ror	r23
 7bc:	67 95       	ror	r22
 7be:	b7 95       	ror	r27
 7c0:	88 0f       	add	r24, r24
 7c2:	91 1d       	adc	r25, r1
 7c4:	96 95       	lsr	r25
 7c6:	87 95       	ror	r24
 7c8:	97 f9       	bld	r25, 7
 7ca:	08 95       	ret

000007cc <__fp_pscA>:
 7cc:	00 24       	eor	r0, r0
 7ce:	0a 94       	dec	r0
 7d0:	16 16       	cp	r1, r22
 7d2:	17 06       	cpc	r1, r23
 7d4:	18 06       	cpc	r1, r24
 7d6:	09 06       	cpc	r0, r25
 7d8:	08 95       	ret

000007da <__fp_pscB>:
 7da:	00 24       	eor	r0, r0
 7dc:	0a 94       	dec	r0
 7de:	12 16       	cp	r1, r18
 7e0:	13 06       	cpc	r1, r19
 7e2:	14 06       	cpc	r1, r20
 7e4:	05 06       	cpc	r0, r21
 7e6:	08 95       	ret

000007e8 <__fp_round>:
 7e8:	09 2e       	mov	r0, r25
 7ea:	03 94       	inc	r0
 7ec:	00 0c       	add	r0, r0
 7ee:	11 f4       	brne	.+4      	; 0x7f4 <__fp_round+0xc>
 7f0:	88 23       	and	r24, r24
 7f2:	52 f0       	brmi	.+20     	; 0x808 <__fp_round+0x20>
 7f4:	bb 0f       	add	r27, r27
 7f6:	40 f4       	brcc	.+16     	; 0x808 <__fp_round+0x20>
 7f8:	bf 2b       	or	r27, r31
 7fa:	11 f4       	brne	.+4      	; 0x800 <__fp_round+0x18>
 7fc:	60 ff       	sbrs	r22, 0
 7fe:	04 c0       	rjmp	.+8      	; 0x808 <__fp_round+0x20>
 800:	6f 5f       	subi	r22, 0xFF	; 255
 802:	7f 4f       	sbci	r23, 0xFF	; 255
 804:	8f 4f       	sbci	r24, 0xFF	; 255
 806:	9f 4f       	sbci	r25, 0xFF	; 255
 808:	08 95       	ret

0000080a <_exit>:
 80a:	f8 94       	cli

0000080c <__stop_program>:
 80c:	ff cf       	rjmp	.-2      	; 0x80c <__stop_program>
